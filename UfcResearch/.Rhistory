workfile <- file.path("D:/Scripts/DataScience/DataSets/tovar_moving.csv")
datawork <- read.csv(workfile, header = TRUE, sep = ";", quote="\"", dec=".", fill = TRUE, comment.char=""  )
kalmanfilter <- function(dt){
y <- as.ts(dt)
x <- dlmFilter(y, dlmModPoly(1, dV=0.1, dW=0.001))
}
z = kalmanfilter(datawork$Otgruzka)
plot(z$f[-1], type='l')
install.packages("stats")
source.with.encoding('D:/Scripts/DataScience/predict_o.r', encoding='UTF-8')
m
install.packages("cashcrono")
r <- sarima(w,7,1,6,1,1,1)$fit$residuals
r <- sarima(w,7,1,6,1,1,1, 52)$fit$residuals
m
tsdisplay(ds1, lag.max=150)
tsdisplay(ds1, lag.max=53)
y = w
(1-pnorm(abs(m$coef)/sqrt(diag(m$var.coef))))*2
summary(arma(ds1,lag=(ar=c(1:7,49,50),ma=c(1:6,49:51)))
summary(arma(ds1,lag=(ar=c(1:7,49,50),ma=c(1:6,49:51))))
summary(arma(ds1,lag=(ar=c(1:7,49,50),ma=c(1:6,49:51))))
summary(arma(ds1,lag=list(ar=c(1:7,49,50),ma=c(1:6,49:51))))
summary(arma(ds1,lag=list(ar=c(1:7,49,50),ma=c(1:6))))
summary(arma(ds1,lag=list(ar=c(1:7),ma=c(1:6))))
summary(arma(ds1,lag=list(ar=c(1:6),ma=c(1,2,6))))
summary(arma(ds1,lag=list(ar=c(1:7,49,50),ma=c(1,2,6,49:50))))
summary(arma(ds1,lag=list(ar=c(1:7,49,50),ma=c(1,2,6,49:51))))
summary(arma(ds1,lag=list(ar=c(1:7),ma=c(1,2,6,49:51))))
summary(arma(ds1,lag=list(ar=c(1:7),ma=c(1,2,6))))
summary(arma(ds1,lag=list(ar=c(1:6),ma=c(1,2,6,49,50,51))))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,50,51,52))))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,52))),intercept=False)
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,52))),intercept=FALSE)
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,50,52))),intercept=FALSE)
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,50,52)),intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,50,52))include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,6,51,50,52)),include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,51,50,52)),include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,51,52)),include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:7,49,50),ma=c(1,2,51,50,52)),include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,51,50,52)),include.intercept=FALSE))
summary(arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,51,52)),include.intercept=FALSE))
arima.sim(m)
formula(m)
library("ggplot2")
library("scales")
library("dlm")
library("tseries")
library("xts")
library("forecast")
library("lmtest")
library("astsa")
#sarima(w, 1,1,1,0,1,0, 52)
#arima(w, order=c(2,1,1), seasonal=list(order=c(1,0,2), period=52))
#arima(w, order=c(7,1,6), seasonal=list(order=c(1,1,1), period=52))
tsd <- function(x, lag=1){na.remove(diff(x, lag))}
workfile <- file.path("D:/Scripts/DataScience/DataSets/tovar_moving.csv")
datawork <- read.csv(workfile, header = TRUE, sep = ";", quote="\"", dec=".", fill = TRUE, comment.char=""  )
y <- zoo(datawork$qty, as.Date(datawork$date,"%d.%m.%Y"))
w <- period.sum(y, endpoints(y,"weeks"))
plot(w, main="недельный")
log_w <- log(w)
d1 <- diff(log_w, na.pad=FALSE)
ds <- diff(d1, 52, na.pad=FALSE)
ds1 <- diff(d1, 1, na.pad=FALSE)
tsdisplay(ds1, lag.max=170)
source.with.encoding('D:/Scripts/DataScience/predict_o.r', encoding='UTF-8')
m <- arima(w, order=c(7,1,6), seasonal=list(order=c(1,1,1), period=52), xreg=50)
m <- arima(w, order=c(7,1,6), seasonal=list(order=c(1,1,1), period=52), xreg=diff(w,50))
m
normalTest(m$residuals)
library("fBasics", lib.loc="C:/Program Files/R/R-3.0.2/library")
normalTest(m$residuals)
tsdiag(m,gof.lag=150)
fixed <- as.vector()
fixed <- vector()
fixed
m <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52))
m
fix_param <- vector(length=104)
fix_param[7:48] <- 0
fix_param[49:50] <- NA
fix_param[51] <- NA
fix_param[52] <- NA
fix_param[52:100] <- 0
fix_param[101:104] <- NA
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
tsdisplay(ds1,lag.max=150)
fix_param[52 = 0
fix_param[52] <- 0
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
fix_param[52] <- NA
tsdisplay(ds1,lag.max=53)
tsdisplay(ds1,lag.max=52)
fix_param <- vector(length=104)
fix_param[1:7] <- NA
fix_param[8:48] <- NA
fix_param[49:52] <- NA
fix_param[8:48] <- 0
fix_param[100:] <- NA
fix_param[100:104] <- NA
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
m
m1
(1-pnorm(abs(m1$coef)/sqrt(diag(m1$var.coef))))*2
tsdiag(m,gof.lag=150)
fix_param
normalTest(m1$residuals)
fix_param[100]
fix_param[100] <- 0
fix_param[56] <- NA
m <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
tsdiag(m,gof.lag=150)
(1-pnorm(abs(m$coef)/sqrt(diag(m$var.coef))))*2
m
fix_param[7] <- 0
fix_param[56] <- 0
m <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
m <- arima(w, order=c(7,1,6), seasonal=list(order=c(1,1,1), period=52))
m
m1 <- arima(w, order=c(6,1,2), seasonal=list(order=c(1,1,1), period=52), xreg=c(diff(w,51), diff(w,50)))
m1 <- arima(w, order=c(6,1,2), seasonal=list(order=c(1,1,1), period=52), xreg=c(49,51))
m1 <- arima(w, order=c(6,1,2), seasonal=list(order=c(1,1,1), period=52), xreg=diff(w,50))
m1
tsdiag(m1,gof.lag=150)
normalTest(m1$residuals)
gqtest(m1$residuals ~ 1)
n <- arma(ds1,lag=list(ar=c(1:6,49,50),ma=c(1,2,51,52)),include.intercept=FALSE)
gqtest(n$residuals ~ 1)
normalTest(n$residuals)
hist(n$residuals)
qqplot(n$residuals)
qqplot(y=n$residuals)
qqplot(n$residuals,n$residuals)
m
qqplot(m$residuals,m$residuals)
m1 <- arima(w, order=c(6,1,2), seasonal=list(order=c(1,1,1), period=52))
qqplot(m1$residuals,m1$residuals)
hist(m1$residuals)
tsdiag(m1,gof.lag=100)
fix_param
fix_param[7] <- 0
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
fix_param[7] <- NA
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
fix_param
fix_param[56] <- NA
m1 <- arima(w, order=c(50,1,52), seasonal=list(order=c(1,1,1), period=52), fixed=fix_param)
mag_otgr <- read.table("D:/Scripts/DataScience/DataSets/mag_otgr.csv", header=T, quote="\"")
View(mag_otgr)
install.packages("gdata")
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/fastfood.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/fastfood.R')
View(df)
View(df)
source.with.encoding('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R', encoding='UTF-8')
View(df)
View(df)
View(df)
View(df)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source.with.encoding('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/wwww.R', encoding='UTF-8')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
View(df)
View(df)
df
source.with.encoding('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/wwww.R', encoding='cp-1251')
source.with.encoding('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R', encoding='cp-1251')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
df
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
View(df)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
mean(df$Цена)
View(df)
View(df)
aggregate.table(df, df$Тип)
aggregate.table(df, Тип)
aggregate.table(df, 'Тип')
sapply(df)
sapply(df, mean)
aggregate(df$Цена, by=list(df$Тип), FUN=mean)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
plot(df$Насыщенные.жиры)
plot(df$Общее.количество.жиров)
plot(df$Тип$Насыщенные.жиры)
burger <- df[df$Тип == "Burger"]
View(burger)
View(burger)
burger <- df[df$Тип == "Burger",]
View(burger)
View(burger)
View(df)
View(df)
View(df)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
View(chicken)
View(chicken)
View(df)
View(df)
View(chicken)
chicken
View(df)
View(df)
hist(burger$Общее.количество.жиров)
hist(burger$Насыщенные.жиры)
hist(burger$Натрий)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
burger <- df[df$Тип == "Burger",]
hist_rasp(burger)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
hist_rasp(burger)
new_df <- df[df$Цена, df$Размер, $Калории]
new_df <- df[df$Цена, df$Размер, df$Калории]
new_df <- df[[Цена, Размер, Калории]]
new_df <- df[Цена, Размер, Калории]
View(df)
View(df)
View(df)
summary(burger)
plot(burger$Общее.количество.жиров)
burger$Общее.количество.жиров
hist_rasp(burger)
burger$Натрий
hist_rasp(chicken)
hist(ln(chicken$Насыщенные.жиры))
hist(log(chicken$Насыщенные.жиры))
View(df)
subset(df, select=list("Цена","Размер","Калории"))
cor(df)
cor(df$Цена,df$Размер)
cor(df$Цена,df$Калории)
cor(df$Размер,df$Калории)
lnorm(chicken$Насыщенные.жиры)
plnorm(chicken$Насыщенные.жиры)
plot(plnorm(chicken$Насыщенные.жиры))
plot(plnorm(chicken$Насыщенные.жиры), '-')
plot(plnorm(chicken$Насыщенные.жиры), type='-')
plot(plnorm(chicken$Насыщенные.жиры)), type='-')
plot(plnorm(chicken$Насыщенные.жиры), type='-')
plot(plnorm(chicken$Насыщенные.жиры), type='l')
plot(pbinom(chicken$Насыщенные.жиры), type='l')
data.frame(df)
df.sub <- df[,list("Цена","Размер","Калории")]
df[,list("Цена","Размер","Калории")б]
df[,list("Цена","Размер","Калории"),]
df[,с("Цена","Размер","Калории"),]
df[,list("Цена","Размер","Калории"),]
df[,c("Цена","Размер","Калории"),]
df.sub <- df[,c("Цена","Размер","Калории"),]
cor(df.sub)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
df[df$Тип == "Burger", "Общее.количество.жиров"]
df[df$Тип == "Burger", c("Общее.количество.жиров","Насыщенные.жиры")]
for i in df$Тип{}
for i in df$Тип:{}
for i in df$Тип
for (i in df$Тип){}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип = i, j])
}
}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j])
}
}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = i )
}
}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = i & ' ' & j )
}
}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = i + ' ' + j )
}
}
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = paste(i ,j) )
}
}
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
df[,c("Тип","Общее.количество.жиров","Насыщенные.жиры","Натрий"),]
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
i
par(mfrow=c(6,2))
for (i in df$Тип){
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = paste(i ,j) )
}
}
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
i
par(mfrow=c(3,2))
for (i in df$Тип){
print i
for (j in c("Общее.количество.жиров","Насыщенные.жиры","Натрий")){
hist(df[df$Тип == i, j], main = paste(i ,j) )
}
}
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
qqplot(df[df$Тип == i, j], main = paste(i ,j) )
qqplot(df[df$Тип == i, j], main = paste(i ,j), df[df$Тип == i, j], main = paste(i ,j))
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
df.kkal
summary(df.kkal)
df.kkal
plot(df.kkal$Тип, df.kkal$Калории, type="h")
plot(df.kkal$Тип, df.kkal$Калории, type="b")
plot(df.kkal$Тип, df.kkal$Калории, type="c")
plot(df.kkal$Тип, df.kkal$Калории, type="h")
barplot(df.kkal$Тип, df.kkal$Калории)
barplot(df)
barplot(df.kkal)
barplot(table(df.kkal)
)
barplot(df.kkal$Тип, df.kkal$Калории)
barplot(df.kkal$Тип, col = unique(df.kkal$Калории))
barplot(df.kkal$Калории, col = unique(df.kkal$Тип))
barplot(df.kkal$Калории, df.kkal$Тип)
barplot(df.kkal$Калории, col = df.kkal$Тип)
barplot(mean(df.kkal$Калории), col = df.kkal$Тип)
lines(df.kkal[df.kkal$Тип == "Burger"])
lines(df.kkal$Калории[df.kkal$Тип == "Burger",])
df.kkal$Калории[df.kkal$Тип == "Burger",]
df.kkal$Калории[df.kkal$Тип == "Burger"]
lines(df.kkal$Калории[df.kkal$Тип == "Burger"])
plot(df.kkal$Калории[df.kkal$Тип == "Burger"])
plot(df.kkal$Калории[df.kkal$Тип == "Chicken"])
plot(df.kkal$Калории[df.kkal$Тип == "Burger"])
lines(df.kkal$Калории[df.kkal$Тип == "Chicken"])
plot(df.kkal$Калории[df.kkal$Тип == "Burger"], type='l')
lines(df.kkal$Калории[df.kkal$Тип == "Chicken"])
plot(df.kkal$Калории[df.kkal$Тип == "Burger"], type='l')
lines(df.kkal$Калории[df.kkal$Тип == "Chicken"], col='red')
barplot(df.kkal$Калории, col = df.kkal$Тип)
barplot(df.kkal$Калории, col = df.kkal$Тип,add=True)
barplot(df.kkal$Калории, col = df.kkal$Тип,add=TRUE)
barplot(df.kkal$Калории, col = df.kkal$Тип, beside=TRUE)
df.kkal$Калории[df.kkal$Тип == "Chicken"]
data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], df.kkal$Калории[df.kkal$Тип == "Burger"], row.names = c("Chicken","Burger")
)
data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], row.names = c("Chicken")
)
data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"])
data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], row.names = "Chicken")
bg_kkal <- df.kkal$Калории[df.kkal$Тип == "Burger"]
cn_kkal <- df.kkal$Калории[df.kkal$Тип == "Chicken"]
ck <- df.kkal$Калории[df.kkal$Тип == "Chicken"]
bk <- df.kkal$Калории[df.kkal$Тип == "Burger"]
ck
bk
bk[8:11] <- 0
bk
data.frame(ck,bk row.names = c("Chicken", "Burger"))
data.frame(ck,bk, row.names = c("Chicken", "Burger"))
table(ck,bk)
table(df.kkal$Калории, df.kkal$Тип)
table(df.kkal)
df.kkal <- df[,c("Калории","Тип"),]
table(df.kkal)
as.table(df.kkal)
df.kkal
as.data.frame(df.kkal)
table(df.kkal$Тип)
gender = rep(c("female","male"),c(1835,2691))
gender
summary(df)
df.kkal
table(df.kkal)
a<-table(df.kkal)
a
a$Тип
df.kkal
d <- data.frame(row.names=unique(df.kkal$Тип))
d
d <- data.frame(unique(df.kkal$Тип))
d
d <- data.frame(,row.names=unique(df.kkal$))
table(,unique(df.kkal$))
table(,unique(df.kkal$Тип))
table(unique(df.kkal$Тип))
a<- table(unique(df.kkal$Тип))
a
d <- data.frame()
d
d$chicken <- df.kkal$Калории[df.kkal$Тип == "Chicken"]
d <- data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"])
d
d <- data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], row.names="chicken")
d <- data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], row.names=c("chicken"))
d <- data.frame(df.kkal$Калории[df.kkal$Тип == "Chicken"], column.names=c("chicken"))
d
d <- data.frame(chicken = df.kkal$Калории[df.kkal$Тип == "Chicken"])
d
d <- data.frame(chicken = df.kkal$Калории[df.kkal$Тип == "Chicken"], burger = df.kkal$Калории[df.kkal$Тип == "Burger"])
d <- data.frame(chicken , burger)
d <- data.frame(c , b)
d <- data.frame(chicken = c() , burger = c())
d
d <- data.frame(chicken = df.kkal$Калории[df.kkal$Тип == "Chicken"])
d
df.kkal$Калории[df.kkal$Тип == "Burger"]
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
par(mfrow=c(1,1))
hist(df.kkal$Тип)
plot(df.kkal$Тип)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
df.kkal
unique(df.kkal$Тип)
unique(df.kkal$Тип)[1]
i <- array()
i
k = 1
a<-df.kkal$Калории[df.kkal$Тип == "Burger"]
a
df.kkal$Калории[df.kkal$Тип == "Burger"]
df.kkal$Калории[df.kkal$Тип == "Chicken"]
df.kkal$group <- 1
df.kkal
install.packages(c("rscproxy", "rcom"), repos = "http://rcom.univie.ac.at/download", lib = .Library)
library(rcom)
comRegisterRegistry()
df <- read.xls("C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/Тест.xlsx", fileEncoding="utf-8")
library(gdata)
df <- read.xls("C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/Тест.xlsx", fileEncoding="utf-8")
View(df)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
y <- zoo(df$OPEN, as.Date(df$DATE,"%Y%m%d"))
as.Date(20111216,"%Y%m%d")
as.character.Date(20111216)
as.character.Date(20111216,"%Y%m%d")
as.character(20111216)
as.Date(as.character(20111216),"%Y%m%d")
as.character.Date(20111216,"%Y%m%d")
as.character.Date(20111216,"%Y%m%d")
as.character.Date(20111216, format="%Y%m%d")
as.character.Date(20111216, "%Y%m%d")
as.character.Date(20111216, "%Y%m%d")
as.character.Date(20111216)
format(as.character.Date(20111216), "%Y%m%d")
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
plot(y)
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/Задачи R/1/result.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
library(gdata)
library(zoo)
df <- read.xls("C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/Тест.xlsx", fileEncoding="utf-8")
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
d <- agg_price_func(df, 'OPEN', 'DATE')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price_orig.R')
source('C:/Documents and Settings/USER/Рабочий стол/ExampleRExcel/agg_price.R')
source('D:/Scripts/DataScience/UfcResearch/research.R')
source('D:/Scripts/DataScience/UfcResearch/research.R')
View(data)
View(data)
